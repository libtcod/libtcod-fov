cmake_minimum_required(VERSION 3.23...4.0)

if(NOT DEFINED CMAKE_TOOLCHAIN_FILE)
    set(CMAKE_TOOLCHAIN_FILE
        "${CMAKE_CURRENT_SOURCE_DIR}/vcpkg/scripts/buildsystems/vcpkg.cmake"
        CACHE STRING "Vcpkg toolchain file")
endif()

set(LIBTCODFOV_TOOLS ON CACHE BOOL "Build fovtool.")
set(LIBTCODFOV_TESTS OFF CACHE BOOL "Build unit tests.")
set(LIBTCODFOV_INSTALL ON CACHE BOOL "Enable install targets.")

if(LIBTCODFOV_TESTS)
    list(APPEND VCPKG_MANIFEST_FEATURES "tests")
endif()
if(LIBTCODFOV_TOOLS)
    list(APPEND VCPKG_MANIFEST_FEATURES "fovtool")
endif()

file(STRINGS include/libtcod-fov/version.h LIBTCODFOV_VERSION_LINE REGEX "TCODFOV_STRVERSION")
string(REGEX MATCH "TCODFOV_STRVERSION \"([^\"]+)\"" LIBTCODFOV_VERSION_LINE ${LIBTCODFOV_VERSION_LINE})
set(LIBTCODFOV_VERSION_FULL ${CMAKE_MATCH_1})
string(REGEX MATCH "([0-9]+\.[0-9]+\.[0-9]+)" LIBTCODFOV_VERSION ${LIBTCODFOV_VERSION_FULL})
message(STATUS "Libtcod version: ${LIBTCODFOV_VERSION}")

project(
    libtcod-fov
    VERSION ${LIBTCODFOV_VERSION}
    LANGUAGES C CXX
)

include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake OPTIONAL RESULT_VARIABLE CONAN_FILE)
if(CONAN_FILE)
    conan_basic_setup(TARGETS)
endif()

set(CMAKE_INSTALL_BINDIR "bin" CACHE STRING "")
set(CMAKE_INSTALL_LIBDIR "lib" CACHE STRING "")
set(CMAKE_INSTALL_DATAROOTDIR "share" CACHE STRING "")
set(CMAKE_INSTALL_INCLUDEDIR "include" CACHE STRING "")

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib" CACHE STRING "")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin" CACHE STRING "")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin" CACHE STRING "")

add_subdirectory(src)

if(LIBTCODFOV_TESTS)
    add_subdirectory(tests)
endif()
if(LIBTCODFOV_TOOLS)
    add_subdirectory(src/fovtool)
endif()

if (WIN32)
    set(CPACK_GENERATOR "ZIP")
else()
    set(CPACK_GENERATOR "TGZ")
endif()
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE.txt")
set(CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/README.md")
include(CPack)
